//A
#include<stdio.h>
int main()
{
    int sum[1000];
    int a=0,b=0;
    int i=0,j=0;
    while((scanf("%d %d",&a,&b))==2)
    {
        sum[i]=a+b;
        i++;
    }
    for(j=0;j<i;j++)
    {
        printf("%d\n",sum[j]);
    }
	return 0;
}
//B
#include<stdio.h>
int main()
{
    int sum(int n);
    int n[1000];
    int out[1000];
    int i=0,j=0;
   while((scanf("%d",&n[i]))==1)
   { 
       out[i]=sum(n[i]);
       i++;
   }
   for(j=0;j<i;j++)
   {
       printf("%d\n",out[j]);
   }
	return 0;
}
//D
int sum(int n)
{
    int sum=0;
    if(n%2==0)
    {
        sum=(n+1)*n/2;
    }else
    {
        sum=(n+1)*(n-1)/2+(n+1)/2;
    }
    return sum;
}
//F
#include<stdio.h>
int main()
{
    int x=0;
    int n=0;
    int d=1;
   
    scanf("%d %d %d",&x,&n,&d);
    int i=0;
    int sign=1;
    for(i=0;i<n;i++)
    {
        sign=x*sign;
    }
    
    int t=0;
    t=sign%d;
    printf("%d",t);
    return 0;
}
//C 四小时AC一道题的快乐无与伦比
#include<stdio.h>
int main() {
    int n=0;
    scanf("%d",&n);
    int t=0;
    char s1[n][100],s2[n][100];
    char a[n][100],b[n][100];
    char sum[n][100];
    int m[n];
    for(t=0;t<n;t++)
    {
        // char s1[100], s2[100];
        scanf("%s %s", s1[t], s2[t]);
        int lena, lenb;
        lena = strlen(s1[t]);
        lenb = strlen(s2[t]);
        
        int max=lena;
        if(max<lenb)
        {max=lenb;}
        m[t]=max;
        
        // char a[max+1], b[max+1];
        
        int i = 0, j = 0;
        for(i=0;i<max+1;i++)
        {
            a[t][i]=0;
            b[t][i]=0;
        }
    
        for(i = lena-1; i >= 0; i--)
        {
            a[t][i] = s1[t][j] - '0';//attention!
            j++;
        }
        // for(i=max;i>max+1-lena;i--)
        // {
        //     a[i]=0;
        // }
        j=0;
        for(i=lenb-1;i>=0;i--)
        {
            b[t][i]=s2[t][j] - '0';//attention!
            j++;
            
        }
        // for(i=max;i>max+1-lenb;i--)
        // {
        //     b[i]=0;
        // }
        // for(i=0;i<max+1;i++)
        // {printf("%d ",b[i]);}
    
        // char sum[max+1];
    
        for(i=0;i<max+1;i++)
        {
            sum[t][i]=0;
        }
        for(i=0;i<max+1;i++)
        {
            sum[t][i]=sum[t][i]+a[t][i]+b[t][i];
            if(sum[t][i]>9)
            {
                sum[t][i]=sum[t][i]%10;
                sum[t][i+1]=1;
            }
        }
        // if(sum[t][max]==0)
        // {
        //     for(i=max-1;i>=0;i--)
        //     {
        //         printf("%d",sum[t][i]);
        //     }
        // }else
        // {
        //     for(i=max;i>=0;i--)
        //     {
        //         printf("%d",sum[t][i]);
        //     }
        // }
    }
    int k=0;
    for(t=0;t<n;t++)
    {
        if(sum[t][m[t]]==0)
        {
            for(k=m[t]-1;k>=0;k--)
            {
                printf("%d",sum[t][k]);
            }
        }else
        {
            for(k=m[t];k>=0;k--)
            {
                printf("%d",sum[t][k]);
            }
        }
        printf("\n");
    }
    return 0;
}
//E
#include <iostream>
#include <algorithm>

using namespace std;

int main()
{
    int n = 1, m = 0, a[100];
    std::cin >> n >> m;
    int i = 0;
    for (i = 0; i < n; i++)
    {
        std::cin >> a [i];
    }
    for (i = 0; i < m; i++)
    {
        std::next_permutation(a, a + n);//STL!
    }
    for (i = 0; i < n; i++)
    {
        std::cout << a[i] << " ";
    }
    return 0;
}
//H
#include <iostream>
#include <algorithm>
using namespace std;
int main()
{
    int total = 1;////total
    std::cin >> total;
    int t = 0;
    int max[total];////total
    for (t = 0; t < total; t++)
    {
        max[t] = 1;
    }
    for (t = 0; t < total; t++)
    {
        int n = 5;//n
        std::cin >> n;
        int data[n];////n
        int x = 0;
        for (x = 0; x < n; x++)
        {
            std::cin >> data[x];
        }
        if (n >= 5)
        {
            int rf[n];////reflection //n
            for (x = 0; x < 5; x++)
            {
                rf[x] = 1;
            }
            for (x = 5; x < n; x++)
            {
                rf[x] = 0;
            }
            int i = 0, j = 0;
            //Cn5

            int times = 1;//times
            int nfact = 1;
            int nmfact = 1;
            for (i = 1; i <= n; i++)
            {
                nfact = i * nfact;
            }
            for (i = 1; i <= (n - 5); i++)
            {
                nmfact = i * nmfact;
            }
            times = nfact / nmfact / 120;

            int out[times];//times
            int record = 1;//record
            for (i = 0; i < times; i++)
            {
                record = 1;
                std::next_permutation(rf, rf + 7);//n
                for (j = 0; j < n; j++)
                {
                    if (rf[j] == 1)
                    {
                        record = record * data[j];
                    }
                }
                out[i] = record;
            }
            int temp = 0;
            for (i = 0; i < times; i++)
            {
                for (j = 0; j < times - i - 1; j++)
                {
                    if (out[j] > out[j + 1])
                    {
                        temp = out[j];
                        out[j] = out[j + 1];
                        out[j + 1] = temp;
                    }
                }
            }

            max[t] = out[times - 1];
        }else
        {
            int c = 0;
            for (c = 0; c < n; c++)
            {
                max[t] = max[t] * data[c];
            }
        }
    }
    for (t = 0; t < total; t++)
    {
        std::cout << max[t] << endl;
    }
    //std::cout << "Hello World!\n";
    return 0;
}
//G
#include<stdio.h>
int mex(int arr[], int size);
int main() 
{
    int total=0;
    scanf("%d",&total);
    int t=0,o=0;
    int out[total];
    for(o=0;o<total;o++)
    {
        out[o]=0;
        
    }
    for(t=0;t<total;t++)
    {
        int n = 0;
        scanf("%d", &n);
        int data[n];
        int i = 0;
        for(i = 0; i < n; i++) {
            scanf("%d", &data[i]);
        }
    
        int a[n], b[n];
        for(i = 0; i < n; i++) {
            a[i] = -1;
            b[i] = -1;
        }
        int j = 0;
        int Ahas = 0;
        int Bhas = 0;
        int ca = 0, cb = 0;
        for(i = 0; i < n; i++) {
            Ahas = 0;
            Bhas = 0;
            for(j = 0; j < n; j++) {
                if(a[j] == data[i]) {
                    Ahas = 1;
                    ca++;
                }
                if(b[j] == data[i]) {
                    Bhas = 1;
                    cb++;
                }
            }
            if(Ahas == 1 && Bhas == 0) {
                b[i] = data[i];
            }
            else if(Bhas == 1 && Ahas == 0) {
                a[i] = data[i];
            }
            else if(Ahas == 0 && Bhas == 0) {
                a[i] = data[i];
            }
            else if(Ahas == 1 && Bhas == 1) {
                if(ca > cb) {
                    b[i] = data[i];
                }
                else
                {
                    a[i] = data[i];
                }
            }
        }
    
        // for(i = 0; i < n; i++) {
        //     printf("%d ", a[i]);
        //     // printf("\n");
        //     // printf("%d ",b[i]);
        // }
        // printf("\n");
        // for(i = 0; i < n; i++) {
        //     printf("%d ", b[i]);
        // }
        out[t] = mex(a, n)+mex(b, n);
        // printf("%d", out);
    }
    for(t=0;t<total;t++)
    {
        printf("%d\n",out[t]);
    }
    return 0;
}
int mex(int arr[], int size) {
    int i = 0;
    int j = 0;
    int Has = 0;
    int m = 0;
    // int keep=1;
    // printf("function invoked\n");
    for(i = 0; i < 100; i++) {
        // printf("the first cycle\n");
        Has=0;
        for(j = 0; j < size; j++) {
            // printf("the second cycle\n");
            if(i == arr[j]) {
                Has = 1;
                break;
            }
        }
        if(Has == 0) {
            break;
        }

        // printf("i %d ",i);
        // printf("Has %d",Has);
    }
    if(Has == 0) {
        m = i;
    }
    return m;
}
